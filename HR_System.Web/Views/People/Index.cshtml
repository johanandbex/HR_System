@model PagedList.IPagedList<HR_System.Data.Person>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "People";
}

<h2>People/Resources</h2>

<p>
    <button type="button" onclick="location.href = '@Url.Action("Create", "People")'">Add New</button>
</p>

@using (Html.BeginForm("Index", "People", FormMethod.Get))
{
    <p>
        Total results per page: @Html.TextBox("currentPageSize", ViewBag.currentPageSize as string)
        <input type="submit" value="Update" />
    </p>
    <p>
        Find by Dept: @Html.TextBox("searchStringDept", ViewBag.CurrentFilterDept as string)
        <input type="submit" value="Search by Dept" />
    </p>
    <p>
        Find by Status: @Html.TextBox("searchStringStatus", ViewBag.CurrentFilterStatus as string)
        <input type="submit" value="Search by Status" />
    </p>

}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.FirstNameSortParm, currentFilterDept = ViewBag.CurrentFilterDept, currentFilterStatus = ViewBag.CurrentFilterStatus, currentPageSize = ViewBag.currentPageSize })
        </th>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilterDept = ViewBag.CurrentFilterDept, currentFilterStatus = ViewBag.CurrentFilterStatus, currentPageSize = ViewBag.currentPageSize })
        </th>
        <th>
            @Html.ActionLink("Date of Birth", "Index", new { sortOrder = ViewBag.DateOfBirthSortParm, currentFilterDept = ViewBag.CurrentFilterDept, currentFilterStatus = ViewBag.CurrentFilterStatus, currentPageSize = ViewBag.currentPageSize })
        </th>
        <th>
            @Html.ActionLink("Status", "Index", new { sortOrder = ViewBag.StatusSortParm, currentFilterDept = ViewBag.CurrentFilterDept, currentFilterStatus = ViewBag.CurrentFilterStatus, currentPageSize = ViewBag.currentPageSize })
        </th>
        <th>
            @Html.ActionLink("Department", "Index", new { sortOrder = ViewBag.DepSortParm, currentFilterDept = ViewBag.CurrentFilterDept, currentFilterStatus = ViewBag.CurrentFilterStatus, currentPageSize = ViewBag.currentPageSize })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().EmployeeNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Email)
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateOfBirth)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status.Status1)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Department.DepartmentName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmployeeNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.PersonId }) |
                @Html.ActionLink("Details", "Details", new { id = item.PersonId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.PersonId })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilterDept = ViewBag.CurrentFilterDept, currentFilterStatus = ViewBag.CurrentFilterStatus, currentPageSize = ViewBag.currentPageSize }))

